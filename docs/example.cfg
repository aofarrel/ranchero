
cast_types = True
# Should we convert known NCBI variables into non-string types when converting to polars dataframe?

ignore_polars_read_errors = True
# Use ignore_errors flag when reading files with polars?

immediate_biosample_merge = False
# Should run_accession indexed files immediately be merged to sample-indexed files?
# Setting to false still allows such a conversion, but it has to be triggered manually

immediate_try_parse_dates = True
# Should reading a file with polars try use try_parse_dates flag?
# If false, parsing dates has to be done manually later on.

intermediate_files = True
# Should intermediate files be written during various parsing and conversion tasks?

keep_all_values_of_these_shared_keys = ["primary_search"]
# If Ranchero is flattening a nested list of dictionaries that looks like this:
#
# [ [{"k": "primary_search"}, {"v": "SAMNXXXXXX"}], [{"k": "primary_search"}, {"v": "very-cool-Illumina-reads"}] ]
#
# and you want a result like this (which can be turned into a single dataframe column with nested values):
#
# {"primary_search": ["SAMNXXXXXX", "very-cool-Illumina-reads"]}
#
# then set keep_all_values_of_these_shared_keys to ["primary_search"] or any other variables you want to treat like this.
# Otherwise, only one key will be selected. You should treat this selection as random. For instance, you may get:
#
# {"primary_search": ["very-cool-Illumina-reads"]}

polars_normalize = True
# When json_normalizing(), should polars' experimental version be used?
# It's recommend to set this to True even though polars' read_json() is currently under active development as the alternative is far slower

verbose = True
# Should we clutter up stdout?

unwanted = {
	"assay_type": ['Tn-Seq', 'ChIP-Seq'],
	"platform": None
}
# Metadata of samples/runs that you want to drop. This will not be done automatically!